openapi : "3.0.0"
info:
  title: FlaskApp - OpenAPI 1.0
  description: |
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification
  version: 1.0
  
servers:
  - url: http://flaskapp.xsanjaya.me/api
tags:
  - name: auth
    description: Operations about user

  - name: data
    description: Everything about data

paths:
  /auth/login:
    get:
      tags:
        - auth
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /auth/register:
    post:
      tags:
        -  auth
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

  /data/text:
    post:
      tags:
        - data
      summary: Text Cleansing
      description: ''
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "RT USER: USER siapa yang telat ngasih tau elu?edan sarap gue bergaul dengan cigax jifla calis sama siapa noh licew juga"
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []

  /data/file:
    post:
      tags:
        - data
      summary: uploads an file csv
      description: ''
      operationId: uploadFile
      parameters:
        - name: file
          in: path
          description: ''
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
    register:
      type: object
      properties:
        name:
          type: string
          example: Xsanjaya
        email:
          type: string
          example: xsanjaya@email.com
        password:
          type: string
          example: 'password'
      xml:
        name: register

  securitySchemes:
    x-token-access:
      type: apiKey
      name: x-token-access
      in: header